{
    "openapi": "3.0.0",
    "info": {
        "title": "Doctor Appointment API",
        "description": "API Documentation for Doctor Appointment System",
        "contact": {
            "email": "shreezanpandit@gmial.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://bookdoctor.test/api",
            "description": "Doctor Appointment API Server"
        }
    ],
    "paths": {
        "/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "List all appointments",
                "description": "Retrieve a list of appointments for the authenticated user. If the user is a patient, only their appointments are returned. If the user is a doctor, only appointments they are involved in are returned.",
                "operationId": "b8c7b364f8969997096bb5cc471278c2",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of appointments list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "patient_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "doctor_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2024-08-29"
                                            },
                                            "time": {
                                                "type": "string",
                                                "format": "time",
                                                "example": "14:30"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Consultation regarding recent symptoms"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "description": "Store a new appointment record in the database. This endpoint is accessible to authenticated users with the role of 'patient'.",
                "operationId": "a115e378e7f96db9e8a6537cbdd95921",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "doctor_id",
                                    "description",
                                    "time",
                                    "date"
                                ],
                                "properties": {
                                    "doctor_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Consultation regarding recent symptoms"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment created successfully"
                                        },
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-29"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "14:30"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Consultation regarding recent symptoms"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to create with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "doctor_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected doctor_id is invalid."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The time field must be in the format H:i."
                                                    }
                                                },
                                                "date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The date field must be in the format Y-m-d."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get a specific appointment",
                "description": "Retrieve details of a specific appointment by ID.",
                "operationId": "61d4007e825ced1889d6920046b94170",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the appointment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of appointment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-29"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "14:30"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Consultation regarding recent symptoms"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update a specific appointment",
                "description": "Update details of a specific appointment by ID.",
                "operationId": "511a4d608e4e3e8d3b228b0acd0c300c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the appointment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "doctor_id",
                                    "description",
                                    "time",
                                    "date"
                                ],
                                "properties": {
                                    "doctor_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment updated successfully"
                                        },
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "patient_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-08-30"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "15:00"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to update with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "doctor_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected doctor_id is invalid."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The time field must be in the format H:i."
                                                    }
                                                },
                                                "date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The date field must be in the format Y-m-d."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete a specific appointment",
                "description": "Remove a specific appointment record from the database by ID.",
                "operationId": "d8e9060be30a172d6d13ee736add6753",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the appointment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to delete with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/doctors": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "List all doctors",
                "description": "Retrieve a list of doctors. Optionally, filter by department_id.",
                "operationId": "947a21b8ae7d72b24b902600c8e443c9",
                "parameters": [
                    {
                        "name": "department_id",
                        "in": "query",
                        "description": "Filter doctors by department ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of doctor list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "contact": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "bio": {
                                                "type": "string",
                                                "example": "Experienced cardiologist"
                                            },
                                            "department_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "doctor_image.jpg"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-01-01T00:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-01-01T00:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "department_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected department_id is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a new doctor",
                "description": "Store a new doctor record in the database.",
                "operationId": "63bce394368aa6060b5d115d679b58ef",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact",
                                    "bio",
                                    "department_id"
                                ],
                                "properties": {
                                    "contact": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Experienced cardiologist"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "doctor_image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doctor successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "doctor created"
                                        },
                                        "doctor": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Experienced cardiologist"
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "doctor_image.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to create with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "contact": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The contact field is required."
                                                    }
                                                },
                                                "bio": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The bio field is required."
                                                    }
                                                },
                                                "department_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected department_id is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/doctors/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Get a specific doctor",
                "description": "Retrieve details of a specific doctor including their schedules.",
                "operationId": "dd020a547256bc4a1307488115755404",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the doctor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of doctor details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "doctor": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "contact": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Experienced cardiologist"
                                                },
                                                "department_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "doctor_image.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "schedules": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "schedule_time": {
                                                                "type": "string",
                                                                "example": "09:00:00"
                                                            },
                                                            "appointment_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Doctor not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Update a specific doctor",
                "description": "Update details of a specific doctor.",
                "operationId": "fe4a8e9a447673c61851f2551ef6a955",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the doctor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact",
                                    "bio",
                                    "department_id"
                                ],
                                "properties": {
                                    "contact": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Experienced cardiologist"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "doctor_image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Doctor successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "doctor updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to update with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "contact": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The contact field is required."
                                                    }
                                                },
                                                "bio": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The bio field is required."
                                                    }
                                                },
                                                "department_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected department_id is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Delete a specific doctor",
                "description": "Remove a specific doctor from the database.",
                "operationId": "47054e8f5075a45cf804bf85751f3310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the doctor to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctor successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "doctor deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to delete with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "List all patients",
                "description": "Retrieve a list of patients. This endpoint may be restricted based on user roles.",
                "operationId": "b9c0b408f3511800a33df4178b575584",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of patient list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "dob": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "1990-01-01"
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "patient_image.jpg"
                                            },
                                            "gender": {
                                                "type": "string",
                                                "enum": [
                                                    "male",
                                                    "female",
                                                    "other"
                                                ],
                                                "example": "female"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "description": "Store a new patient record in the database. This endpoint is accessible to authenticated users with the appropriate role.",
                "operationId": "61950fddd8517abd752f4bae3f7e1f95",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dob",
                                    "gender"
                                ],
                                "properties": {
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "patient_image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient created"
                                        },
                                        "patient": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "patient_image.jpg"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "enum": [
                                                        "male",
                                                        "female",
                                                        "other"
                                                    ],
                                                    "example": "male"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to create with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "dob": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The dob field is required and must be a valid date before today."
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected gender is invalid."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image must be a file of type: jpeg, png, jpg, gif."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a specific patient",
                "description": "Retrieve details of a specific patient by ID.",
                "operationId": "4abd7d79081d22b0cc0977dace111a67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of patient details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "patient": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "patient_image.jpg"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "enum": [
                                                        "male",
                                                        "female",
                                                        "other"
                                                    ],
                                                    "example": "female"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a specific patient",
                "description": "Update details of a specific patient by ID.",
                "operationId": "8fe660040da4932f864bf9f4ba9fac92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dob",
                                    "gender"
                                ],
                                "properties": {
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "female"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "patient_image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient updated successfully"
                                        },
                                        "patient": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "updated_image.jpg"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "enum": [
                                                        "male",
                                                        "female",
                                                        "other"
                                                    ],
                                                    "example": "female"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to update with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "dob": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The dob field is required and must be a valid date before today."
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected gender is invalid."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image must be a file of type: jpeg, png, jpg, gif."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a specific patient",
                "description": "Remove a specific patient record from the database by ID.",
                "operationId": "1e5720455f7244630af037e8ec1e83f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to delete with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedules": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "List all schedules for the authenticated doctor",
                "description": "Retrieve a list of schedules for the authenticated doctor. Returns a 404 error if no schedules are found.",
                "operationId": "fc08fb0aff7498d462534ebae4f61352",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "doctor_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "week_day": {
                                                "type": "string",
                                                "enum": [
                                                    "sunday",
                                                    "monday",
                                                    "tuesday",
                                                    "wednesday",
                                                    "thursday",
                                                    "friday",
                                                    "saturday"
                                                ],
                                                "example": "monday"
                                            },
                                            "start_time": {
                                                "type": "string",
                                                "format": "time",
                                                "example": "09:00:00"
                                            },
                                            "end_time": {
                                                "type": "string",
                                                "format": "time",
                                                "example": "17:00:00"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-08-29T00:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No schedules found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Create a new schedule",
                "description": "Store a new schedule for the authenticated doctor. Access to this endpoint is restricted to authorized users.",
                "operationId": "3ed99d565770af8296c62f0144788b6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "week_day",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "week_day": {
                                        "type": "string",
                                        "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                        ],
                                        "example": "monday"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Schedule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule Created"
                                        },
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "week_day": {
                                                    "type": "string",
                                                    "enum": [
                                                        "sunday",
                                                        "monday",
                                                        "tuesday",
                                                        "wednesday",
                                                        "thursday",
                                                        "friday",
                                                        "saturday"
                                                    ],
                                                    "example": "monday"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to create with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "week_day": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected week_day is invalid."
                                                    }
                                                },
                                                "start_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start_time field is required and must be a valid time."
                                                    }
                                                },
                                                "end_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end_time field is required and must be a valid time."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedules/{id}": {
            "get": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Get a specific schedule",
                "description": "Retrieve details of a specific schedule by ID.",
                "operationId": "b081671a9783adda9ea2f90f8962a6a0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of schedule details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "week_day": {
                                                    "type": "string",
                                                    "enum": [
                                                        "sunday",
                                                        "monday",
                                                        "tuesday",
                                                        "wednesday",
                                                        "thursday",
                                                        "friday",
                                                        "saturday"
                                                    ],
                                                    "example": "monday"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Update a specific schedule",
                "description": "Update details of a specific schedule by ID.",
                "operationId": "c8c36ad4dfc143155b608b77be8700db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "week_day",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "week_day": {
                                        "type": "string",
                                        "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                        ],
                                        "example": "monday"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule Updated"
                                        },
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doctor_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "week_day": {
                                                    "type": "string",
                                                    "enum": [
                                                        "sunday",
                                                        "monday",
                                                        "tuesday",
                                                        "wednesday",
                                                        "thursday",
                                                        "friday",
                                                        "saturday"
                                                    ],
                                                    "example": "monday"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-29T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to update with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "week_day": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected week_day is invalid."
                                                    }
                                                },
                                                "start_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The start_time field is required and must be a valid time."
                                                    }
                                                },
                                                "end_time": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The end_time field is required and must be a valid time."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schedules"
                ],
                "summary": "Delete a specific schedule",
                "description": "Remove a specific schedule from the database by ID.",
                "operationId": "fb505c1a06fba903afee879cceef1b5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the schedule to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule Deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to delete with your role"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule not found"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user and generate token",
                "description": "Login a user and return a token along with user details",
                "operationId": "d2d429751d33564f29616ec2be2e37d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "shreejan@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "token_string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "patient"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Patient Login successfully"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout the authenticated user and delete the access token",
                "operationId": "44a7d85c70e2f604dfc31e5b0aa5af85",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logout successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a user by providing their name, email, role, and password.",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "patient"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Created Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "patient"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-08-26T12:34:56.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-08-26T12:34:56.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format: `Bearer {token}`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "Doctors",
            "description": "Doctors"
        },
        {
            "name": "Patients",
            "description": "Patients"
        },
        {
            "name": "Schedules",
            "description": "Schedules"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ]
}